<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <packaging>jar</packaging>

  <name>dubbo-provider</name>
  <groupId>com.dahai.demo.dubbo.provider</groupId>
  <artifactId>dubbo-provider</artifactId>
  <version>1.0-SNAPSHOT</version>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.dahai.demo.dubbo.api</groupId>
      <artifactId>dubbo-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>3.3.3</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.jmx</groupId>
          <artifactId>jmxri</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jdmk</groupId>
          <artifactId>jmxtools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.jms</groupId>
          <artifactId>jms</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.sgroschupf</groupId>
      <artifactId>zkclient</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>dubbo</artifactId>
      <version>2.5.3</version>
      <exclusions>
        <exclusion>
          <artifactId>spring</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>3.2.16.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.12</version>
    </dependency>
  </dependencies>

  <!--配置打包方式   将打包出来的lib和jar放在一起就可以启动运行啦-->
  <build>
    <!--打包的资源-->
    <!--<resources>-->
      <!--<resource>-->
        <!--<targetPath>${project.build.directory}/classes</targetPath>-->
        <!--<directory>src/main/resources</directory>-->
        <!--<filtering>true</filtering>-->
        <!--<includes>-->
          <!--<include>**/*</include>-->
        <!--</includes>-->
      <!--</resource>-->
      <!--&lt;!&ndash;结合dubbo的main默认加载的配置文件路径是下面的-->
      <!--这里的意思是将<directory>src/main/resources/spring</directory>下的-->
<!--<include>spring-context.xml</include>拷贝到<targetPath>${project.build.directory}/META-INF/spring</targetPath>-->
      <!--&ndash;&gt;-->
      <!--<resource>-->
        <!--<targetPath>${project.build.directory}/classes/META-INF/spring</targetPath>-->
        <!--<directory>src/main/resources</directory>-->
        <!--<filtering>true</filtering>-->
        <!--<includes>-->
          <!--<include>spring-dubbo.xml</include>-->
        <!--</includes>-->
      <!--</resource>-->
    <!--</resources>-->

    <!--<plugins>-->
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-jar-plugin</artifactId>-->
        <!--<configuration>-->
          <!--<classesDirectory>target/classes</classesDirectory>-->
          <!--<archive>-->
            <!--<manifest>-->
              <!--<mainClass>com.alibaba.dubbo.container.Main</mainClass>-->
              <!--&lt;!&ndash;打包时MANIFEST.MF文件不记录的时间戳版本&ndash;&gt;-->
              <!--<useUniqueVersions>false</useUniqueVersions>-->
              <!--<addClasspath>true</addClasspath>-->
              <!--<classpathPrefix>lib/</classpathPrefix>-->
            <!--</manifest>-->
            <!--<manifestEntries>-->
              <!--<class-Path>.</class-Path>-->
            <!--</manifestEntries>-->
          <!--</archive>-->
        <!--</configuration>-->
      <!--</plugin>-->
      <!--&lt;!&ndash;将依赖的包放到lib里面&ndash;&gt;-->
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-dependency-plugin</artifactId>-->
        <!--<executions>-->
          <!--<execution>-->
            <!--<id>copy-dependencies</id>-->
            <!--<phase>package</phase>-->
            <!--<goals>-->
              <!--<goal>copy-dependencies</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--<type>jar</type>-->
              <!--<includeType>jar</includeType>-->
              <!--<useUniqueVarsions>false</useUniqueVarsions>-->
              <!--<outputDirectory>${project.build.directory}/lib</outputDirectory>-->
            <!--</configuration>-->
          <!--</execution>-->
        <!--</executions>-->
      <!--</plugin>-->
    <!--</plugins>-->



  </build>

</project>
